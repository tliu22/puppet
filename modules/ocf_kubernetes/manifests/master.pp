# This class is relatively lightweight because much of the
# kubeadm init bootstrapping is handled by the
# puppetlabs-kubernetes module. Master definitions for etcd
# server certs, keys, peer certs and keys are in:
# /opt/puppet/shares/private/kubernetes/hosts/myhost.yaml.
# This file is generated by puppetlabs kubetool.
#
# Shared kubernetes private keys, certs, and client certs,
# and tokens for joining the cluster are in
# /opt/puppet/shares/private/kubernetes/os/Debian.yaml.
# This file is also generated by puppetlabs kubetool.
#
# Non sensitive generated configuration data is in common.yaml.
class ocf_kubernetes::master {
  include ocf::packages::docker_kubernetes
  include ocf::packages::kubernetes
  include ocf_kubernetes::loadbalancer

  $etcd_version = lookup('kubernetes::etcd_version')
  $etcd_archive = "etcd-v${etcd_version}-linux-amd64.tar.gz"
  $etcd_source  = "https://github.com/etcd-io/etcd/releases/download/v${etcd_version}/${etcd_archive}"

  file {
    '/etc/profile.d/kubeconfig.sh':
      mode    => '0755',
      content => 'export KUBECONFIG=/etc/kubernetes/admin.conf';
  }

  class { 'kubernetes':
    controller        => true,
    manage_etcd       => true,
    # note that etcd_* variables are chained.
    # This will be fixed in an upcoming version, and
    # we will only have to specify etcd_version.
    etcd_version      => $etcd_version,
    etcd_archive      => "etcd-v${etcd_version}-linux-amd64.tar.gz",
    etcd_source       => "https://github.com/etcd-io/etcd/releases/download/v${etcd_version}/etcd-v${etcd_version}-linux-amd64.tar.gz",
    install_dashboard => true,
    # If we let puppetlabs-kubernetes manage docker then
    # there are dependency issues because they apt add key
    # is not staged before the package is added.
    manage_docker     => false,
    create_repos      => false,
  }

  class { 'ocf_kubernetes::ingress':
    require => Class['kubernetes'];
  }

}
